@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject FirebaseService FirebaseService
@inject AuthenticationStateProvider AuthStateProvider

@code {
    [Parameter]
    public EventCallback<bool> OnToggle { get; set; }
}

<link href="css/navmenu.css" rel="stylesheet" />

<div class="top-row navbar">
    <div class="container-fluid">
        <img src="images/car-lister-favicon.png" alt="Car Lister Logo" class="app-logo" />
        <a class="navbar-brand" href="">
            Car Lister
        </a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="async () => await ToggleNavMenu()">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="nav-scrollable @(isExpanded ? "show" : "")">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All" @onclick="async () => await CollapseNavMenu()">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        
        <AuthorizeView>
            <Authorized>

                <div class="nav-item px-3">
                    <button class="nav-link logout-button" @onclick="async () => { await HandleLogout(); await CollapseNavMenu(); }">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </button>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool isExpanded = false;

    private async Task ToggleNavMenu()
    {
        isExpanded = !isExpanded;
        await OnToggle.InvokeAsync(isExpanded);
    }

    private async Task CollapseNavMenu()
    {
        isExpanded = false;
        await OnToggle.InvokeAsync(false);
    }

    private async Task HandleLogout()
    {
        await FirebaseService.SignOut();
        ((FirebaseAuthenticationStateProvider)AuthStateProvider).NotifyAuthenticationStateChanged();
        NavigationManager.NavigateTo("/login");
    }
} 