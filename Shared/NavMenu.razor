@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject FirebaseService FirebaseService
@inject AuthenticationStateProvider AuthStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Todo PWA</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <button class="nav-link btn btn-link" @onclick="HandleLogout">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </button>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

<style>
    .btn-link {
        border: none;
        padding: 0.9rem 1rem;
        color: rgba(255,255,255,0.7);
        text-align: left;
        width: 100%;
    }

    .btn-link:hover {
        color: rgba(255,255,255,0.9);
        background-color: rgba(255,255,255,0.1);
    }
</style>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task HandleLogout()
    {
        await FirebaseService.SignOut();
        ((FirebaseAuthenticationStateProvider)AuthStateProvider).NotifyAuthenticationStateChanged();
        NavigationManager.NavigateTo("/login");
    }
} 