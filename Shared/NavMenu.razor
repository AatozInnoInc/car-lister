@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject FirebaseService FirebaseService
@inject AuthenticationStateProvider AuthStateProvider

<link href="css/navmenu.css" rel="stylesheet" />

<div class="top-row navbar">
    <div class="container-fluid">
        <a class="navbar-brand" href="">
            <span class="app-icon">üìù</span>
            Todo PWA
        </a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="nav-scrollable @(isExpanded ? "show" : "")">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All" @onclick="CollapseNavMenu">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="todos" @onclick="CollapseNavMenu">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> My Todos
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <button class="nav-link btn btn-link" @onclick="async () => { await HandleLogout(); CollapseNavMenu(); }">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </button>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool isExpanded = false;

    private void ToggleNavMenu()
    {
        isExpanded = !isExpanded;
    }

    private void CollapseNavMenu()
    {
        isExpanded = false;
    }

    private async Task HandleLogout()
    {
        await FirebaseService.SignOut();
        ((FirebaseAuthenticationStateProvider)AuthStateProvider).NotifyAuthenticationStateChanged();
        NavigationManager.NavigateTo("/login");
    }
} 