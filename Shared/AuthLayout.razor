@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <div class="page">
                <div class="sidebar">
                    <NavMenu />
                </div>

                <main>
                    <div class="top-row px-4">
                        <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
                    </div>

                    <article class="content px-4">
                        @Body
                    </article>
                </main>
            </div>

            <style>
                .page {
                    position: relative;
                    display: flex;
                    flex-direction: row;
                }

                main {
                    flex: 1;
                }

                .sidebar {
                    background-image: linear-gradient(180deg, rgb(5, 39, 103) 0%, #3a0647 70%);
                    width: 250px;
                    height: 100vh;
                    position: sticky;
                    top: 0;
                }

                .top-row {
                    background-color: #f7f7f7;
                    border-bottom: 1px solid #d6d5d5;
                    justify-content: flex-end;
                    height: 3.5rem;
                    display: flex;
                    align-items: center;
                    position: sticky;
                    top: 0;
                    z-index: 1;
                }

                .top-row ::deep a, .top-row ::deep .btn-link {
                    white-space: nowrap;
                    margin-left: 1.5rem;
                    text-decoration: none;
                }

                .top-row ::deep a:hover, .top-row ::deep .btn-link:hover {
                    text-decoration: underline;
                }

                .top-row ::deep a:first-child {
                    overflow: hidden;
                    text-overflow: ellipsis;
                }
            </style>
        </Authorized>
        <NotAuthorized>
            <RedirectToLogin />
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }
} 