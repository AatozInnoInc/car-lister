@page "/modal-example"
@using car_lister.Shared

<PageTitle>Modal Component Example</PageTitle>
<link href="css/modal.css" rel="stylesheet" />

<div class="container" style="padding: 2rem;">
    <h1>Modal Component Examples</h1>
    <p>This page demonstrates the new Modal component with various configurations.</p>

    <div class="button-group" style="display: flex; gap: 1rem; margin: 2rem 0; flex-wrap: wrap;">
        <button class="btn btn-primary" @onclick="ShowBasicModal">Basic Modal</button>
        <button class="btn btn-secondary" @onclick="ShowLargeModal">Large Modal</button>
        <button class="btn btn-outline" @onclick="ShowSmallModal">Small Modal</button>
        <button class="btn btn-primary" @onclick="ShowFormModal">Form Modal</button>
        <button class="btn btn-success" @onclick="ShowAnimationModal">Animation Demo</button>
    </div>

    <!-- Basic Modal -->
    <Modal @ref="basicModal" Title="Basic Modal" IsVisible="showBasicModal" IsVisibleChanged="OnBasicModalChanged">

        <Body>
            <p>This is a basic modal with default settings.</p>
            <p>You can close it by clicking the X button, clicking outside, or pressing Escape.</p>
        </Body>
        <Footer>
            <button type="button" class="btn btn-secondary" @onclick="HideBasicModal">Close</button>
        </Footer>
    </Modal>

    <!-- Large Modal -->
    <Modal @ref="largeModal" Title="Large Modal" Size="Modal.ModalSize.Large" IsVisible="showLargeModal"
        IsVisibleChanged="OnLargeModalChanged">

        <Body>
            <h4>Large Modal Content</h4>
            <p>This modal demonstrates the large size option. It's perfect for forms or content that needs more space.
            </p>
            <div class="row">
                <div class="col-md-6">
                    <h5>Left Column</h5>
                    <p>You can use the grid system inside modals to organize content.</p>
                </div>
                <div class="col-md-6">
                    <h5>Right Column</h5>
                    <p>This helps create a more organized layout for complex forms.</p>
                </div>
            </div>
        </Body>
        <Footer>
            <button type="button" class="btn btn-secondary" @onclick="HideLargeModal">Cancel</button>
            <button type="button" class="btn btn-primary" @onclick="HideLargeModal">Save Changes</button>
        </Footer>
    </Modal>

    <!-- Small Modal -->
    <Modal @ref="smallModal" Title="Small Modal" Size="Modal.ModalSize.Small" IsVisible="showSmallModal"
        IsVisibleChanged="OnSmallModalChanged">

        <Body>
            <p>This is a small modal, perfect for confirmations or simple messages.</p>
        </Body>
        <Footer>
            <button type="button" class="btn btn-secondary" @onclick="HideSmallModal">Cancel</button>
            <button type="button" class="btn btn-primary" @onclick="HideSmallModal">Confirm</button>
        </Footer>
    </Modal>

    <!-- Form Modal -->
    <Modal @ref="formModal" Title="Add New Item" IsVisible="showFormModal" IsVisibleChanged="OnFormModalChanged">

        <Body>
            <form>
                <div class="form-group">
                    <label for="item-name">Item Name:</label>
                    <input type="text" id="item-name" class="form-control" placeholder="Enter item name" />
                </div>
                <div class="form-group">
                    <label for="item-description">Description:</label>
                    <textarea id="item-description" class="form-control" rows="3"
                        placeholder="Enter description"></textarea>
                </div>
                <div class="form-group">
                    <label for="item-category">Category:</label>
                    <select id="item-category" class="form-control">
                        <option value="">Select a category</option>
                        <option value="electronics">Electronics</option>
                        <option value="clothing">Clothing</option>
                        <option value="books">Books</option>
                    </select>
                </div>
            </form>
        </Body>
        <Footer>
            <button type="button" class="btn btn-secondary" @onclick="HideFormModal">Cancel</button>
            <button type="button" class="btn btn-primary" @onclick="SaveItem">Save Item</button>
        </Footer>
    </Modal>

    <!-- Animation Demo Modal -->
    <Modal @ref="animationModal" Title="Animation Demo" IsVisible="showAnimationModal"
        IsVisibleChanged="OnAnimationModalChanged">

        <Body>
            <h4>Watch the Bouncy Keyframe Animations!</h4>
            <p>This modal demonstrates proper CSS keyframe animations with a bouncy popup effect!</p>
            <div class="alert alert-info">
                <strong>Bouncy Keyframe Animation Features:</strong>
                <ul>
                    <li>0.5s backdrop fade-in (keyframe)</li>
                    <li>0.6s modal bouncy slide-down with scale bounce</li>
                    <li>0.4s exit animation (slide up + fade out)</li>
                    <li>3-stage entry: slide down → bounce up → settle</li>
                    <li>Pure CSS keyframes - proper implementation</li>
                </ul>
            </div>
            <p><strong>Notice:</strong> The modal slides down from 100px, bounces up to 10px with 105% scale, then
                settles to final position. The backdrop fades in over 0.5 seconds. Both use proper CSS keyframes!</p>
            <p><strong>Try:</strong> Press <kbd>Escape</kbd> to close, click outside the modal on the backdrop, or use
                the Close buttons - all will show the exit animation!</p>
        </Body>
        <Footer>
            <button type="button" class="btn btn-secondary" @onclick="HideAnimationModal">Close</button>
            <button type="button" class="btn btn-primary" @onclick="HideAnimationModal">Got it!</button>
        </Footer>
    </Modal>
</div>

@code {
    // Modal state variables
    private bool showBasicModal = false;
    private bool showLargeModal = false;
    private bool showSmallModal = false;
    private bool showFormModal = false;
    private bool showAnimationModal = false;

    // Modal references
    private Modal? basicModal;
    private Modal? largeModal;
    private Modal? smallModal;
    private Modal? formModal;
    private Modal? animationModal;

    // Basic Modal Methods
    private async Task ShowBasicModal()
    {
        showBasicModal = true;
        await basicModal?.Show();
    }

    private async Task HideBasicModal()
    {
        await basicModal?.Hide();
    }

    private async Task OnBasicModalChanged(bool isVisible)
    {
        showBasicModal = isVisible;
        await Task.CompletedTask;
        StateHasChanged();
    }

    // Large Modal Methods
    private async Task ShowLargeModal()
    {
        showLargeModal = true;
        await largeModal?.Show();
    }

    private async Task HideLargeModal()
    {
        await largeModal?.Hide();
    }

    private async Task OnLargeModalChanged(bool isVisible)
    {
        showLargeModal = isVisible;
        await Task.CompletedTask;
        StateHasChanged();
    }

    // Small Modal Methods
    private async Task ShowSmallModal()
    {
        showSmallModal = true;
        await smallModal?.Show();
    }

    private async Task HideSmallModal()
    {
        await smallModal?.Hide();
    }

    private async Task OnSmallModalChanged(bool isVisible)
    {
        showSmallModal = isVisible;
        await Task.CompletedTask;
        StateHasChanged();
    }

    // Form Modal Methods
    private async Task ShowFormModal()
    {
        showFormModal = true;
        await formModal?.Show();
    }

    private async Task HideFormModal()
    {
        await formModal?.Hide();
    }

    private async Task OnFormModalChanged(bool isVisible)
    {
        showFormModal = isVisible;
        await Task.CompletedTask;
        StateHasChanged();
    }

    private async Task SaveItem()
    {
        // Simulate saving
        await Task.Delay(500);
        await HideFormModal();
        // In a real app, you would save the form data here
    }

    // Animation Modal Methods
    private async Task ShowAnimationModal()
    {
        showAnimationModal = true;
        await animationModal?.Show();
    }

    private async Task HideAnimationModal()
    {
        await animationModal?.Hide();
    }

    private async Task OnAnimationModalChanged(bool isVisible)
    {
        showAnimationModal = isVisible;
        await Task.CompletedTask;
        StateHasChanged();
    }
}
