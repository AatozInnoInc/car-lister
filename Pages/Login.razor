@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@using todo_pwa.Services
@inject FirebaseService FirebaseService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<div class="login-container">
    <h3>Login</h3>
    
    @if (isLoading)
    {
        <div class="loading">Loading...</div>
    }
    else
    {
        <button class="google-signin-button" @onclick="SignInWithGoogle">
            <img src="images/google-icon.png" alt="Google Icon" />
            Sign in with Google
        </button>
    }

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="error-message">
            @errorMessage
        </div>
    }
</div>

<style>
    .login-container {
        max-width: 400px;
        margin: 40px auto;
        padding: 20px;
        text-align: center;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .google-signin-button {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        padding: 10px 20px;
        background-color: white;
        border: 1px solid #ddd;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        margin: 20px auto;
        transition: background-color 0.2s;
    }

    .google-signin-button:hover {
        background-color: #f5f5f5;
    }

    .google-signin-button img {
        width: 24px;
        height: 24px;
    }

    .error-message {
        color: #dc3545;
        margin-top: 10px;
    }

    .loading {
        margin: 20px 0;
        font-style: italic;
        color: #666;
    }
</style>

@code {
    private bool isLoading = false;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private async Task SignInWithGoogle()
    {
        try
        {
            isLoading = true;
            errorMessage = string.Empty;
            StateHasChanged();

            var success = await FirebaseService.SignInWithGoogle();
            
            if (success)
            {
                ((FirebaseAuthenticationStateProvider)AuthStateProvider).NotifyAuthenticationStateChanged();
                NavigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "Failed to sign in with Google. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred during sign in. Please try again.";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
} 